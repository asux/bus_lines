#!/bin/sh
#
# Installation example:
# cp .git/hooks/pre-commit .git/hooks/pre-commit.back$(date +%Y%m%d%H%M%S) # backup your old pre-commit if you have
# ln -s $(pwd)/pre-commit $(pwd)/.git/hooks/pre-commit && chmod +x pre-commit

# Check for ruby style errors

red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
NC='\033[0m'

if git rev-parse --verify HEAD >/dev/null 2>&1
then
  against=HEAD
else
  # Initial commit: diff against an empty tree object
  # Change it to match your initial commit sha
  against=41b6a591549497eb2c93544ba32105646334132e
fi

# Check if brakeman is installed for the current project
bundle exec brakeman -v >/dev/null 2>&1 || \
{ echo >&2 "${red}[Brakeman][Fatal]: Add 'gem \"brakeman\", require: false, group: :development' to your Gemfile"; exit 1; }

# Check if rails_best_practices is installed for the current project
#bundle exec rails_best_practices -v >/dev/null 2>&1 || \
#{ echo >&2 "${red}[RBP][Fatal]: Add 'gem \"rails_best_practices\", require: false, group: :development' to your Gemfile"; exit 1; }

# Check if rubycritic is installed for the current project
bundle exec rubycritic -v >/dev/null 2>&1 || \
{ echo >&2 "${red}[RubyCritic][Fatal]: Add 'gem \"rubycritic\", require: false, group: :development' to your Gemfile"; exit 1; }

# Check if rubocop is installed for the current project
bundle exec rubocop -v >/dev/null 2>&1 || \
{ echo >&2 "${red}[Rubocop][Fatal]: Add 'gem \"rubocop\", require: false, group: :development' to your Gemfile"; exit 1; }

# Get only the staged files
FILES="$(git diff --name-only --diff-filter=AMC | grep -E '.*\.(rb|jbuilder)' | tr '\n' ' ')"
remove="db/schema.rb"
FILES=${FILES/$remove/}
echo "${green}[Files]$FILES${NC}"

if [ -n "$FILES" ]
then
  echo "${green}[Rubocop][Info]: Checking Rubocop${NC}"

  any_fail=0

  bundle exec brakeman -Az
  if [ $? -ne 0 ]; then
    echo "${red}[Brakeman][Error]: Fix the issues and commit again${NC}"
    any_fail=1
  else
    echo "${green}[Brakeman][Info]: Everything Okay${NC}"
  fi

#  bundle exec rails_best_practices
#  if [ $? -ne 0 ]; then
#    echo "${red}[RBP][Error]: Fix the issues and commit again${NC}"
#    any_fail=1
#  else
#    echo "${green}[RBP][Info]: Everything Okay${NC}"
#  fi

  bundle exec rubycritic --no-browser
  if [ $? -ne 0 ]; then
    echo "${red}[RubyCritic][Error]: Fix the issues and commit again${NC}"
    any_fail=1
  else
    echo "${green}[RubyCritic][Info]: Everything Okay${NC}"
  fi

  if [ ! -f '.rubocop.yml' ]; then
    echo "${yellow}[Rubocop][Warning]: No .rubocop.yml config file.${NC}"
  fi

  echo "${green}[Rubocop][Info]: ${FILES}${NC}"
  bundle exec rubocop -c .rubocop.yml --parallel ${FILES}
  if [ $? -ne 0 ]; then
    echo "${red}[Rubocop][Error]: Fix the issues and commit again${NC}"
    any_fail=1
  else
    echo "${green}[Rubocop][Info]: Congrats${NC}"
  fi

  if [ $any_fail -ne 0 ]; then
    exit 1
  fi
else
  echo "${green}[Rubocop][Info]: No files to check${NC}"
fi

exit 0
